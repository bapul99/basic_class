JSON vs Object

JSON (문자열) => 데이터를 교환하거나 저장하는 데 사용
-> key 와 value 모두 큰따옴표(")로 감싸야 함
value 에 함수 할당 불가
+제일 마지막 요소에는 ,를 넣으면 안된다 (공식임)

Object (객체) => JavaScript 내에서 데이터 구조로 사용
-> key 는 큰따옴표로 감싸지 않아도 되며 value 에 함수 할당 가능
(json으로 변환하기 위해서는 key, value 모두 문자열의 형태로 만들어야 함)

Express
-> FE(프론트엔드)의 요청과 BE(백엔드)의 응답하는 것을 간편하게 구현할 수 있게 해주는 것
Express 는 간단하고 직관적인 API 를 제공해서 빠르게 서버 설정할 수 있음 또한 다양한 미들웨어 사용 가능!!!

웹서버 (백엔드프로그램)을 개발할때 기본적으로 필요한 여러 기능을 손쉽게 사용할수 있는 기능을 제공해주는 라이브러리
라이브러리 중 하나가 클라이언트의 요청을 받아 응답하는 기능을 쉽게 구현할수 있도록 도움을 줌

Package Manager
-> 프로젝트에서 사용하는 라이브러리와 패키지를 관리하는 도구
-> npm(Node Package Manager) / Yarn

Router
-> HTTP 요청을 처리하는 방법을 정의

CORS (Cross-Origin Resource Sharing)
Cross-Origin -> 서로 다른 출처 간의 요청에서
Resource Sharing -> 데이터를 공유할 때의 제한한다

쌍방 공유 제한 (default) -> 기본적으로 모든 출처 간의 요청을 제한
일방 공유 제한 -> 특정 출처에서만 자원 접근 허가
쌍방 공유 허가 -> 모든 출처 간의 자원 접근 허가